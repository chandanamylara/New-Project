import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import matplotlib .pyplot as plt

import pandas as pd
data=pd.read_csv("C:/Users/SNEHALATHA/Downloads/archive (16)/HousingData.csv")
data

hidden_layers=[1,2,3]
neurons_per_layer=[32,64,128]
for hidden in hidden_layers:
    for neurons in neurons_per_layer:
        model=create_model(hidden,neurons)
        history=model.fit(x_train,y_train,epochs=10,validation_data=(x_val,y_val))

plt.figure(figsize=12,4)
plt.subplot(1,3,5)
plt.ylabel('Mean abs error')
plt.plot(history.epoch, np.array(history.history['loss']), labe'Train Loss)
plt.plot(history.epoch, np.array(history.history['val_loss']),label='Val loss')
plt.legend

import numpy as np
def plot_history(history):
    plt.figure(figsize=(12,4))
    plt.subplot(1, 2, 2)
    plt.ylabel('Mean Abs Error [1000$]')
    plt.plot(history.epoch, np.array(history.history['loss']),label='Train Loss')
    plt.plot(history.epoch, np.array(history.history['val_loss']),label = 'Val loss')
    plt.legend()
    plt.show()

plt.ylabel('Mean abs Error [1000$]')
plt.plot(history.epoch, np.array(history.history['mae']),label='Train Loss')
plt.plot(history.epoch,np.array['val_mae']),label = 'Val Loss')
plt.legend()

